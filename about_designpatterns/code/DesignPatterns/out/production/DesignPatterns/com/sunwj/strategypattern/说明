简单的模拟鸭子游戏

关键：发生问题

橡皮鸭子也会飞：类的继承并不是很完美的

使用继承现在发现问题：

1、  相关方法：

        仅仅针对某些类型的鸭子好用

2、鸭子类型，随着时间发展会越来越多，越来越"个性化"，会有很多的方法不适应。

-----------------------------------------------------------------

tips：代码中间转换过程，一定要注意
过程很重要
使用接口解决相关的问题

需要明白，为什么fly和quack提取出来放到接口中


-----------------------------------------------------------------

使用接口还是不能完全彻底的解决问题

有些鸭子飞：都是一样的，但是因为实现接口，还必须虽然一样，但还要自己重新写一遍

现在开始做fly接口的实现类，但是这个实现类不不是Duck

通过相关的计数改良之后
程序兼容性适应性增强了
面对新需求进行变更额能力增强了


复习：

需要带着想法和目的，自己将代码打一遍，在打的过程中
不能快，一边打，一边动手，不能简单照抄
在写代码的过程中体会相关的作用

对自身没有实际现实作用的东西，基本都记不住

掌握思考问题的方式

=========================================
需要变化的地方，要独立出来。
针对接口编程，而不是实现编程。
